{"ast":null,"code":"import _regeneratorRuntime from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, ButtonGroup, InputGroupAddon, InputGroup, Input, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Messages from \"./Messages\";\nimport MultiTabs, { MultiTabContext } from \"./components/MultiTabs\";\n\nfunction randomName() {\n  var adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\n  var nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\n  var adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  var noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nvar Tab = function Tab(_ref) {\n  var count = _ref.count;\n  return React.createElement(MultiTabContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref2) {\n    var activeTabId = _ref2.activeTabId,\n        currentTabCount = _ref2.currentTabCount,\n        addTab = _ref2.addTab,\n        close = _ref2.close;\n    return React.createElement(\"div\", {\n      className: \"border-right border-left border-bottom p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Tab \", count), React.createElement(Button, {\n      onClick: function onClick() {\n        var nextTab = currentTabCount + 1;\n        addTab(\"Tab \".concat(nextTab), React.createElement(Tab, {\n          count: nextTab,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Add new tab\"));\n  });\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:57000/express_backend', {\n                method: \"POST\",\n                // *GET, POST, PUT, DELETE, etc.\n                mode: \"cors\",\n                // no-cors, cors, *same-origin\n                headers: {\n                  \"Content-Type\": \"text/plain\"\n                },\n                body: document.location.host // body data type must match \"Content-Type\" header\n\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      rrd: false,\n      client_id: '',\n      data: null,\n      tabs: {\n        'tab-1': '1'\n      },\n      activeTab: '-1',\n      messages: [],\n      user: {\n        id: 'user',\n        username: randomName(),\n        color: randomColor()\n      },\n      server: {\n        id: 'server',\n        username: 'server',\n        color: randomColor()\n      }\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMail = _this.getMail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTabs = _this.renderTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearMessages = _this.clearMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        client_id: document.location.host\n      }); // Call our fetch function below once the component mounts\n\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      }); // initiate continuous calls to clients mail box\n\n      this.getMail();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"clearMessages\",\n    value: function clearMessages() {\n      this.setState({\n        messages: []\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function () {\n      var _sendMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var messages, body_data, response, res, message_list;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                messages = this.state.messages;\n                messages.push({\n                  text: document.getElementById('msg-input').value,\n                  member: this.state.user\n                });\n                this.setState({\n                  messages: messages\n                });\n                console.log(this.state.client_id);\n                body_data = {\n                  id: this.state.client_id\n                };\n                _context2.next = 7;\n                return fetch('http://localhost:57000/message', {\n                  method: \"POST\",\n                  // *GET, POST, PUT, DELETE, etc.\n                  mode: \"cors\",\n                  // no-cors, cors, *same-origin\n                  headers: {\n                    \"Content-Type\": \"text/plain\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n                  },\n                  body: this.state.client_id + '~' + document.getElementById('msg-input').value // body data type must match \"Content-Type\" header\n\n                });\n\n              case 7:\n                response = _context2.sent;\n                _context2.next = 10;\n                return response.json();\n\n              case 10:\n                res = _context2.sent;\n\n                //alert(await res.express);\n                if (res.express != \"null\") {\n                  message_list = this.state.messages;\n                  message_list.push({\n                    text: res.express,\n                    member: this.state.server\n                  });\n                  this.setState({\n                    messages: message_list\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function sendMessage() {\n        return _sendMessage.apply(this, arguments);\n      };\n    }() // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"getMail\",\n    value: function () {\n      var _getMail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var body_data, response, res, messages;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                body_data = {\n                  id: this.state.client_id\n                };\n                _context3.next = 3;\n                return fetch('http://localhost:57000/mail', {\n                  method: \"POST\",\n                  mode: \"cors\",\n                  headers: {\n                    \"Content-Type\": \"text/plain\"\n                  },\n                  body: this.state.client_id\n                });\n\n              case 3:\n                response = _context3.sent;\n                _context3.next = 6;\n                return response.json();\n\n              case 6:\n                res = _context3.sent;\n\n                //alert(await res.messages);\n                if (res.messages != \"null\") {\n                  messages = this.state.messages;\n                  messages.push({\n                    text: res.messages,\n                    member: this.state.server\n                  });\n                  this.setState({\n                    messages: messages\n                  });\n                }\n\n                setTimeout(this.getMail, 5000);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getMail() {\n        return _getMail.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderTabs\",\n    value: function renderTabs() {\n      if (this.state.rrd == false) {\n        this.setState({\n          rrd: true\n        });\n      }\n\n      return (\n        /*<Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Tab1\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Moar Tabs\n            </NavLink>\n          </NavItem>\n        </Nav>**/\n        React.createElement(MultiTabs, {\n          openTabImmediately: true,\n          defaultActiveTab: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(MultiTabs.Tab, {\n          title: function title(_ref4) {\n            var close = _ref4.close,\n                activeTabId = _ref4.activeTabId,\n                tabId = _ref4.tabId;\n            return React.createElement(NavLink, {\n              onClick: function onClick() {\n                return console.log(\"Selected tab: \".concat(tabId));\n              },\n              className: classnames({\n                active: activeTabId === tabId\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"d-flex align-content-center flex-wrap\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 193\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"m-1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194\n              },\n              __self: this\n            }, \" Tab 1\"), React.createElement(\"div\", {\n              className: \"p-0\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 195\n              },\n              __self: this\n            }, React.createElement(Button, {\n              size: \"sm\",\n              color: \"link\",\n              onClick: function onClick(event) {\n                event.stopPropagation();\n                console.log(\"Custom close clicked\");\n                close(tabId);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 196\n              },\n              __self: this\n            }, \"X\"))));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Tab, {\n          count: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        })))\n      );\n    }\n    /*shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.tabId === nextProps.tabId) {\n        return false;\n      } else {\n        return true;\n      }\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"chat-ui\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"IRC Chat App\"), function () {\n        if (_this3.state.rrd == false) {\n          return _this3.renderTabs();\n        } else {\n          re('hey');\n        }\n      }), React.createElement(\"div\", {\n        className: \"chat-messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        messages: this.state.messages,\n        currentMember: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"chat-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.sendMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Send\")), React.createElement(Input, {\n        id: \"msg-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.clearMessages();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Clear Chat\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/App.js"],"names":["React","Component","Button","ButtonGroup","InputGroupAddon","InputGroup","Input","TabContent","TabPane","Nav","NavItem","NavLink","Card","CardTitle","CardText","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Row","Col","classnames","Messages","MultiTabs","MultiTabContext","randomName","adjectives","nouns","adjective","Math","floor","random","length","noun","randomColor","toString","Tab","count","activeTabId","currentTabCount","addTab","close","nextTab","App","props","callBackendAPI","fetch","method","mode","headers","body","document","location","host","response","json","status","Error","message","state","rrd","client_id","data","tabs","activeTab","messages","user","id","username","color","server","sendMessage","bind","getMail","toggle","renderTabs","clearMessages","setState","then","res","express","catch","err","console","log","tab","push","text","getElementById","value","member","body_data","message_list","setTimeout","tabId","active","event","stopPropagation","re"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {  Button, ButtonGroup, InputGroupAddon, InputGroup, Input, \n          TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText,\n          ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem , Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Messages from \"./Messages\";\nimport MultiTabs, { MultiTabContext } from \"./components/MultiTabs\";\n\nfunction randomName() {\n  const adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\n  const nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nconst Tab = ({ count }) => (\n  <MultiTabContext.Consumer>\n    {({ activeTabId, currentTabCount, addTab, close }) => {\n      return (\n        <div className=\"border-right border-left border-bottom p-3\">\n          <h2>Tab {count}</h2>\n          <Button\n            onClick={() => {\n              const nextTab = currentTabCount + 1;\n              addTab(`Tab ${nextTab}`, <Tab count={nextTab} />);\n            }}\n          >\n            Add new tab\n          </Button>\n        </div>\n      );\n    }}\n  </MultiTabContext.Consumer>\n);\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      rrd: false,\n      client_id: '',\n      data: null,\n      tabs: {'tab-1': '1'},\n      activeTab: '-1',\n      messages: [],\n      user: {\n        id: 'user',\n        username: randomName(),\n        color: randomColor()\n      },\n      server: {\n        id: 'server',\n        username: 'server',\n        color: randomColor()\n      }\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.getMail = this.getMail.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n    this.clearMessages = this.clearMessages.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({client_id: document.location.host});\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n    // initiate continuous calls to clients mail box\n    this.getMail();\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  clearMessages(){\n    this.setState({messages: []});\n  }\n\n\n  async sendMessage(){\n    const messages = this.state.messages\n    messages.push({\n      text: document.getElementById('msg-input').value,\n      member: this.state.user\n    });\n    this.setState({messages: messages})\n    console.log(this.state.client_id);\n    const body_data = {id: this.state.client_id}\n    const response = await fetch('http://localhost:57000/message', {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        headers: {\n            \"Content-Type\": \"text/plain\"\n            // \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: this.state.client_id + '~' + document.getElementById('msg-input').value // body data type must match \"Content-Type\" header\n    });\n    const res = await response.json();\n    //alert(await res.express);\n    if(res.express != \"null\"){\n      var message_list = this.state.messages\n      message_list.push({\n        text: res.express,\n        member: this.state.server\n      })\n      this.setState({messages: message_list})\n    }\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('http://localhost:57000/express_backend', {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        headers: {\n            \"Content-Type\": \"text/plain\"\n        },\n        body: document.location.host, // body data type must match \"Content-Type\" header\n    });\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  async getMail(){\n    const body_data = {id: this.state.client_id}\n    const response = await fetch('http://localhost:57000/mail', {\n        method: \"POST\",\n        mode: \"cors\", \n        headers: {\"Content-Type\": \"text/plain\"},\n        body: this.state.client_id\n    });\n    const res = await response.json();\n    //alert(await res.messages);\n    if(res.messages != \"null\"){\n      const messages = this.state.messages\n      messages.push({\n        text: res.messages,\n        member: this.state.server\n      })\n      this.setState({messages: messages});\n    }\n    \n    setTimeout(this.getMail, 5000)\n  }\n  \n  renderTabs(){\n  \n      if(this.state.rrd == false){\n        this.setState({rrd: true});\n      }\n    return (\n      /*<Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === '1' })}\n            onClick={() => { this.toggle('1'); }}\n          >\n            Tab1\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: this.state.activeTab === '2' })}\n            onClick={() => { this.toggle('2'); }}\n          >\n            Moar Tabs\n          </NavLink>\n        </NavItem>\n      </Nav>**/\n     \n        <MultiTabs openTabImmediately defaultActiveTab={1}>\n          <MultiTabs.Tab title={({ close, activeTabId, tabId }) => <NavLink onClick={() => console.log(`Selected tab: ${tabId}`)} className={classnames(\n                  { active: activeTabId === tabId }\n                )}>\n                <div className=\"d-flex align-content-center flex-wrap\">\n                  <div className=\"m-1\"> Tab 1</div>\n                  <div className=\"p-0\">\n                    <Button size=\"sm\" color=\"link\" onClick={event => {\n                        event.stopPropagation();\n                        console.log(\"Custom close clicked\");\n                        close(tabId);\n                      }}>\n                      X\n                    </Button>\n                  </div>\n                </div>\n              </NavLink>}>\n            <Tab count={1} />\n          </MultiTabs.Tab>\n          \n        </MultiTabs>\n    );\n                    \n  }\n  /*shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.tabId === nextProps.tabId) {\n      return false;\n    } else {\n      return true;\n    }\n  }*/\n  render() {\n    return (\n      \n      <div className=\"App\">\n        \n        <section className=\"chat-ui\">\n          <div className=\"chat-header\">\n          <h1>IRC Chat App</h1>\n            {()=> {if(this.state.rrd == false){return this.renderTabs()}else{re('hey')}}}\n          </div>\n          <div className=\"chat-messages\">\n            <Messages messages={this.state.messages} currentMember={this.state.user}/>\n          </div>\n          \n        </section>\n        <div className=\"chat-input\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <Button type=\"submit\" color=\"primary\" onClick={() => this.sendMessage()} >Send</Button>\n              </InputGroupAddon>\n              <Input id=\"msg-input\"/>\n              <InputGroupAddon addonType=\"prepend\">\n                <Button color=\"primary\" onClick={() => this.clearMessages()} >Clear Chat</Button>\n              </InputGroupAddon>\n            </InputGroup>\n        </div>\n        \n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}