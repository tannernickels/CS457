{"ast":null,"code":"import _regeneratorRuntime from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:57000/express_backend', {\n                mode: 'cors'\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      client_id: '',\n      data: null\n    };\n    _this.onRadioBtnClick = _this.onRadioBtnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        client_id: document.location.host\n      }); // Call our fetch function below once the component mounts\n\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"onRadioBtnClick\",\n    value: function () {\n      var _onRadioBtnClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var body_data, response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(this.state.client_id);\n                body_data = {\n                  id: this.state.client_id\n                };\n                _context2.next = 4;\n                return fetch('http://localhost:57000/relay_message', {\n                  method: \"POST\",\n                  // *GET, POST, PUT, DELETE, etc.\n                  mode: \"cors\",\n                  // no-cors, cors, *same-origin\n                  cache: \"no-cache\",\n                  // *default, no-cache, reload, force-cache, only-if-cached\n                  credentials: \"same-origin\",\n                  // include, *same-origin, omit\n                  headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\" // \"Content-Type\": \"application/x-www-form-urlencoded\",\n\n                  },\n                  redirect: \"follow\",\n                  // manual, *follow, error\n                  referrer: \"no-referrer\",\n                  // no-referrer, *client\n                  body: JSON.stringify(this.body_data) // body data type must match \"Content-Type\" header\n\n                });\n\n              case 4:\n                response = _context2.sent;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                body = _context2.sent;\n                _context2.t0 = alert;\n                _context2.next = 11;\n                return body;\n\n              case 11:\n                _context2.t1 = _context2.sent;\n                (0, _context2.t0)(_context2.t1);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function onRadioBtnClick() {\n        return _onRadioBtnClick.apply(this, arguments);\n      };\n    }() // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Edit \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Learn React\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, document.location.host), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.data), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.onRadioBtnClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"One\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/App.js"],"names":["React","Component","Button","ButtonGroup","App","props","callBackendAPI","fetch","mode","response","json","body","status","Error","message","state","client_id","data","onRadioBtnClick","bind","setState","document","location","host","then","res","express","catch","err","console","log","body_data","id","method","cache","credentials","headers","redirect","referrer","JSON","stringify","alert","logo"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,YAApC;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AADgB,UAuClBC,cAvCkB;AAAA;AAAA;AAAA;AAAA,6BAuCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,wCAAD,EAA2C;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAA3C,CADb;;AAAA;AACTC,cAAAA,QADS;AAAA;AAAA,qBAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAETC,cAAAA,IAFS;;AAAA,oBAIXF,QAAQ,CAACG,MAAT,KAAoB,GAJT;AAAA;AAAA;AAAA;;AAAA,oBAKPC,KAAK,CAACF,IAAI,CAACG,OAAN,CALE;;AAAA;AAAA,+CAORH,IAPQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvCC;AAEhB,UAAKI,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AANgB;AAOjB;;;;wCAGmB;AAAA;;AAClB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAEK,QAAQ,CAACC,QAAT,CAAkBC;AAA9B,OAAd,EADkB,CAElB;;AACA,WAAKjB,cAAL,GACGkB,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACL,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAEQ,GAAG,CAACC;AAAZ,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD;;;;;;;;;;;;AAGCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,SAAvB;AACMe,gBAAAA,S,GAAY;AAACC,kBAAAA,EAAE,EAAE,KAAKjB,KAAL,CAAWC;AAAhB,iB;;uBACKT,KAAK,CAAC,sCAAD,EAAyC;AACjE0B,kBAAAA,MAAM,EAAE,MADyD;AACjD;AAChBzB,kBAAAA,IAAI,EAAE,MAF2D;AAEnD;AACd0B,kBAAAA,KAAK,EAAE,UAH0D;AAG9C;AACnBC,kBAAAA,WAAW,EAAE,aAJoD;AAIrC;AAC5BC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,iCADX,CAEL;;AAFK,mBALwD;AASjEC,kBAAAA,QAAQ,EAAE,QATuD;AAS7C;AACpBC,kBAAAA,QAAQ,EAAE,aAVuD;AAUxC;AACzB3B,kBAAAA,IAAI,EAAE4B,IAAI,CAACC,SAAL,CAAe,KAAKT,SAApB,CAX2D,CAW3B;;AAX2B,iBAAzC,C;;;AAAtBtB,gBAAAA,Q;;uBAaaA,QAAQ,CAACC,IAAT,E;;;AAAbC,gBAAAA,I;+BACN8B,K;;uBAAY9B,I;;;;;;;;;;;;;;;;;QAGd;;;;6BAYS;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE+B,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADP,yBAFF,EAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIrB,QAAQ,CAACC,QAAT,CAAkBC,IAAtB,CAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKR,KAAL,CAAWE,IAAf,CAdF,EAgBE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,eAAL,EAAN;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,CADF,CADF;AAuBD;;;;EA3EejB,S;;AA8ElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      client_id: '',\n      data: null\n    };\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.setState({client_id: document.location.host});\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  async onRadioBtnClick(){\n    console.log(this.state.client_id);\n    const body_data = {id: this.state.client_id}\n    const response = await fetch('http://localhost:57000/relay_message', {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            // \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrer: \"no-referrer\", // no-referrer, *client\n        body: JSON.stringify(this.body_data), // body data type must match \"Content-Type\" header\n    });\n    const body = await response.json();\n    alert(await body);\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('http://localhost:57000/express_backend', {mode: 'cors'});\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <p>{document.location.host}</p>\n          <p>{this.state.data}</p>\n          \n          <Button color=\"primary\" onClick={() => this.onRadioBtnClick()} >One</Button>\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}