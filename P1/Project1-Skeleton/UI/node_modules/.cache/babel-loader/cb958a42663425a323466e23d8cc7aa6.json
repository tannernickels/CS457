{"ast":null,"code":"import _toConsumableArray from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/components/MultiTabs.js\";\nimport React from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button } from \"reactstrap\";\nimport classnames from \"classnames\"; // author bmhaskar: dynamic reactstrap tabs\n\nvar MultiTabContext = React.createContext();\n\nvar navItem = function navItem(_ref) {\n  var children = _ref.children,\n      tabId = _ref.tabId,\n      close = _ref.close,\n      toggle = _ref.toggle,\n      activeTabId = _ref.activeTabId,\n      props = _objectWithoutProperties(_ref, [\"children\", \"tabId\", \"close\", \"toggle\", \"activeTabId\"]);\n\n  var wrappedChildren = typeof children === \"string\" ? React.createElement(NavLink, {\n    className: classnames({\n      active: activeTabId === tabId\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex align-content-center flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", children), React.createElement(\"div\", {\n    className: \"p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    color: \"link\",\n    onClick: function onClick(event) {\n      event.stopPropagation();\n      close(tabId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"X\")))) : typeof children === \"function\" ? children({\n    tabId: tabId,\n    activeTabId: activeTabId,\n    close: close,\n    toggle: toggle\n  }) : null;\n  var NavItemChild = React.cloneElement(wrappedChildren, _objectSpread({}, props, {\n    onClick: function onClick() {\n      toggle(tabId);\n      wrappedChildren.props && wrappedChildren.props.onClick && wrappedChildren.props.onClick(tabId);\n    }\n  }));\n  return React.createElement(NavItem, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), NavItemChild);\n};\n\nvar MultiTabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MultiTabs, _React$Component);\n\n  function MultiTabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MultiTabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MultiTabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentTabCount: 0,\n      tabs: [],\n      activeTab: _this.props.defaultActiveTab\n    };\n\n    _this.addTab = function (tabTitle, tabContent) {\n      _this.setState(function (state) {\n        var tabs = state.tabs,\n            currentTabCount = state.currentTabCount,\n            activeTab = state.activeTab;\n        var wrappedTitle = React.createElement(MultiTabs.NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, tabTitle);\n        var tabId = currentTabCount + 1;\n        var newActiveTab = _this.props.openTabImmediately ? tabId : activeTab;\n        return {\n          tabs: _toConsumableArray(tabs).concat([{\n            tabTitle: wrappedTitle,\n            tabContent: tabContent,\n            tabId: tabId\n          }]),\n          currentTabCount: tabId,\n          activeTab: newActiveTab\n        };\n      });\n    };\n\n    _this.toggle = function (tab) {\n      if (_this.state.activeTab !== tab) {\n        _this.setState({\n          activeTab: tab,\n          reRender: !_this.state.reRender\n        });\n      }\n    };\n\n    _this.close = function (tabId) {\n      _this.setState(function (state) {\n        var tabs = state.tabs,\n            activeTab = state.activeTab;\n        var filteredTabs = tabs.filter(function (_ref2) {\n          var id = _ref2.tabId;\n          return id !== tabId;\n        });\n        var newActiveTab = activeTab;\n\n        if (filteredTabs.length && activeTab === tabId) {\n          var currentTabIndex = tabs.findIndex(function (_ref3) {\n            var id = _ref3.tabId;\n            return id === tabId;\n          });\n          newActiveTab = tabs[currentTabIndex - 1] ? tabs[currentTabIndex - 1].tabId : tabs[currentTabIndex + 1].tabId;\n        }\n\n        return {\n          tabs: filteredTabs,\n          activeTab: newActiveTab\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiTabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        activeTab: this.props.defaultActiveTab\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tabs = this.state.tabs; // return this.props.children;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MultiTabContext.Provider, {\n        value: {\n          activeTabId: this.state.activeTab,\n          currentTabCount: this.state.currentTabCount,\n          addTab: this.addTab,\n          toggle: this.toggle,\n          close: this.close\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.children, tabs.length > 0 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, tabs.map(function (_ref4) {\n        var tabTitle = _ref4.tabTitle,\n            tabId = _ref4.tabId;\n        return React.cloneElement(tabTitle, {\n          key: tabId,\n          tabId: tabId,\n          close: _this2.close,\n          toggle: _this2.toggle,\n          activeTabId: _this2.state.activeTab\n        });\n      })), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, tabs.map(function (_ref5) {\n        var tabContent = _ref5.tabContent,\n            tabId = _ref5.tabId;\n        return React.createElement(TabPane, {\n          key: tabId,\n          tabId: tabId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, tabContent);\n      })))));\n    }\n  }]);\n\n  return MultiTabs;\n}(React.Component);\n\nMultiTabs.defaultProps = {\n  openTabImmediately: false,\n  defaultActiveTab: 1\n};\nMultiTabs.NavItem = navItem;\n\nMultiTabs.Tab = function (_ref6) {\n  var title = _ref6.title,\n      children = _ref6.children,\n      props = _objectWithoutProperties(_ref6, [\"title\", \"children\"]);\n\n  return React.createElement(MultiTabContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, function (_ref7) {\n    var addTab = _ref7.addTab;\n\n    if (!children.props.added) {\n      children = React.cloneElement(children, {\n        added: true\n      });\n      addTab(title, children, false);\n    }\n\n    return null;\n  });\n};\n\nexport default MultiTabs;\nexport { MultiTabContext };","map":{"version":3,"sources":["/s/bach/k/under/dcdennis/CS457/P1/Project1-Skeleton/UI/src/components/MultiTabs.js"],"names":["React","TabContent","TabPane","Nav","NavItem","NavLink","Button","classnames","MultiTabContext","createContext","navItem","children","tabId","close","toggle","activeTabId","props","wrappedChildren","active","event","stopPropagation","NavItemChild","cloneElement","onClick","MultiTabs","state","currentTabCount","tabs","activeTab","defaultActiveTab","addTab","tabTitle","tabContent","setState","wrappedTitle","newActiveTab","openTabImmediately","tab","reRender","filteredTabs","filter","id","length","currentTabIndex","findIndex","map","key","Component","defaultProps","Tab","title","added"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button } from \"reactstrap\";\nimport classnames from \"classnames\";\n // author bmhaskar: dynamic reactstrap tabs\nconst MultiTabContext = React.createContext();\n\nconst navItem = ({ children, tabId, close, toggle, activeTabId, ...props }) => {\n  const wrappedChildren =\n    typeof children === \"string\" ? (\n      <NavLink className={classnames({ active: activeTabId === tabId })}>\n        <div className=\"d-flex align-content-center flex-wrap\">\n          <div className=\"m-1\"> {children}</div>\n          <div className=\"p-0\">\n            <Button\n              size=\"sm\"\n              color=\"link\"\n              onClick={event => {\n                event.stopPropagation();\n                close(tabId);\n              }}\n            >\n              X\n            </Button>\n          </div>\n        </div>\n      </NavLink>\n    ) : typeof children === \"function\" ? (\n      children({ tabId, activeTabId, close, toggle })\n    ) : null;\n  const NavItemChild = React.cloneElement(wrappedChildren, {\n    ...props,\n\n    onClick: function() {\n      toggle(tabId);\n      wrappedChildren.props &&\n        wrappedChildren.props.onClick &&\n        wrappedChildren.props.onClick(tabId);\n    }\n  });\n  return <NavItem {...props}>{NavItemChild}</NavItem>;\n};\nclass MultiTabs extends React.Component {\n  static defaultProps = { openTabImmediately: false, defaultActiveTab: 1};\n  state = { currentTabCount: 0, tabs: [], activeTab: this.props.defaultActiveTab };\n  static NavItem = navItem;\n  addTab = (tabTitle, tabContent) => {\n    this.setState(state => {\n      const { tabs, currentTabCount, activeTab } = state;\n      const wrappedTitle = <MultiTabs.NavItem>{tabTitle}</MultiTabs.NavItem>;\n\n      const tabId = currentTabCount + 1;\n\n      const newActiveTab = this.props.openTabImmediately\n        ? tabId\n        : activeTab;\n          \n      return {\n        tabs: [...tabs, { tabTitle: wrappedTitle, tabContent, tabId }],\n        currentTabCount: tabId,\n        activeTab: newActiveTab\n      };\n    });\n  };\n  static Tab = ({ title, children, ...props }) => {\n    return (\n      <MultiTabContext.Consumer>\n        {({ addTab }) => {\n          if (!children.props.added) {\n            children = React.cloneElement(children, {\n              added: true\n            });\n            addTab(title, children, false);\n          }\n          return null;\n        }}\n      </MultiTabContext.Consumer>\n    );\n  };\n  toggle = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n        reRender: !this.state.reRender\n      });\n    }\n  };\n\n  close = tabId => {\n    this.setState(state => {\n      const { tabs, activeTab } = state;\n      const filteredTabs = tabs.filter(({ tabId: id }) => id !== tabId);\n      let newActiveTab = activeTab;\n      if (filteredTabs.length && activeTab === tabId) {\n        const currentTabIndex = tabs.findIndex(({ tabId: id }) => id === tabId);\n        newActiveTab = tabs[currentTabIndex - 1]\n          ? tabs[currentTabIndex - 1].tabId\n          : tabs[currentTabIndex + 1].tabId;\n      }\n      return {\n        tabs: filteredTabs,\n        activeTab: newActiveTab\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.setState({ activeTab: this.props.defaultActiveTab });\n  }\n\n  render() {\n    const { tabs } = this.state;\n    // return this.props.children;\n    return (\n      <div>\n        <MultiTabContext.Provider\n          value={{\n            activeTabId: this.state.activeTab,\n            currentTabCount: this.state.currentTabCount,\n            addTab: this.addTab,\n            toggle: this.toggle,\n            close: this.close\n          }}\n        >\n          {this.props.children}\n\n          {tabs.length > 0 && (\n            <React.Fragment>\n              <Nav tabs>\n                {tabs.map(({ tabTitle, tabId }) =>\n                  React.cloneElement(tabTitle, {\n                    key: tabId,\n                    tabId,\n                    close: this.close,\n                    toggle: this.toggle,\n                    activeTabId: this.state.activeTab\n                  })\n                )}\n              </Nav>\n              <TabContent activeTab={this.state.activeTab}>\n                {tabs.map(({ tabContent, tabId }) => {\n                  return (\n                    <TabPane key={tabId} tabId={tabId}>\n                      {tabContent}\n                    </TabPane>\n                  );\n                })}\n              </TabContent>\n            </React.Fragment>\n          )}\n        </MultiTabContext.Provider>\n      </div>\n    );\n  }\n}\nexport default MultiTabs;\nexport { MultiTabContext };"]},"metadata":{},"sourceType":"module"}